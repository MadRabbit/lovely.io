/**
 * The `nake` tasks
 *
 * USAGE:
 *   npm install nake
 *   nake --list
 *
 * Copyright (C) 2011 Nikolay Nemshilov
 */
var nake = require('nake');
nake.Quiet = true;

nake.task('build', 'Build the scripts', function() {
  var fs  = require('fs');
  var dir = __dirname + '/src/stl/';
  var src = require('./src/cli/tools/source');

  system('mkdir -p build/');

  fs.readdirSync(dir).forEach(function(name) {
    console.log(" - ", name);

    fs.writeFileSync('build/' + name + '-src.js', src.build(dir + name));
    fs.writeFileSync('build/' + name + '.js', src.minify(dir + name));

    system('gzip -c build/'+ name +'.js > build/'+ name +'.js.gz');
  });
});


nake.task('test', 'Run the tests', function() {
  system('vows src/stl/*/test/*/*_test.js');
});

nake.namespace('test', function() {
  nake.task('spec', 'Run the tests with spec output', function() {
    system('vows src/stl/*/test/*/*_test.js --spec');
  })
});

nake.task('check', 'Checks the source code with JSHint', function() {
  var fs   = require('fs');
  var dir  = __dirname + '/src/stl/';
  var lint = require('./src/cli/tools/check').init;

  fs.readdirSync(dir).forEach(function(name) {
    console.log(" - ", name);
    lint(dir + name);
  });
});



/**
 * A simple system-call wrapper
 *
 * @param {String} system cmd
 * @return void
 */
function system(cmd) {
  require('child_process').exec(cmd,
    function(error, stdout) {
      if (stdout || error) {
        console.log(stdout || error.message);
      }
    }
  );
}
