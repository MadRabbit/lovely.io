2012-09-18 Nikolay Nemshilov

  * Version 1.3.0
  * `STYLE` custom wrapper was added

        :javascript
        var style = new $.Style(html: "div{color: red}");
        style.insertTo(document.body);

  * `Element.addClass` and `Element#removeClass` now support multiple classes

        :javascript
        element.setClass('one two')
        element.addClass('two three')
        element.getClass() // -> 'one two three'

        element.removeClass('one three')
        element.getClass() // -> 'two'


2012-01-04 Nikolay Nemshilov

  * Version 1.2.0
  * `Element#data` method was added

        :javascript
        var element = new Element('div', {
          'data-something' : 'something'
        });

        element.data('something'); // -> 'something'


2011-09-07 Nikolay Nemshilov

  * Version 1.1.0
  * `Search` -> `NodeList` refactoring
  * The empty by-id search fix
  * CSS-search optimisation
  * Relative navigation with css-filters optimisation
  * `Form#values` now returns a raw data structure
    if say you have a form like that

        :html
        <form id="my-form">
          <input name="person[name][first]" value="Bobby" />
          <input name="person[name][last]"  value="Mountain" />
          <input name="person[email]" value="bobby@mountain.com" />
        </form>

    Then the `$('#my-form').values()` call will return a nested hash like that

        :javascript
        {
          person: {
            name: {
              first: "Bobby",
              last:  "Mountain"
            },
            email: "bobby@mountain.com"
          }
        }

    So it can be exported into JSON data directly


2011-08-19 Nikolay Nemshilov

  * Version 1.0.2
  * Making multiple styles available via the `Element#style` method

      $(element).style('color,background-color');
        // -> {color: '#smth', backgroundColor: '#smth'}

  * `Element#position(smth)` method implementation


2011-08-17 Nikolay Nemshilov

  * Version 1.0.1
  * Making the `$` calls return a link to the search result
    back in general cases, so you could chain the calls

        $('#my-thing')
          .addClass('boo-hoo')
          .html('trololo!')
          .show()